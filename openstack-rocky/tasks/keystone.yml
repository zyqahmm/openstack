---
- name: Create a new database with name 'keystone'
  mysql_db:
    login_user: root
    login_password: redhat
    name: keystone
    state: present

- name: Create database user with name 'keystone' and password 'redhat' with all database privileges
  mysql_user:
    login_user: root
    login_password: redhat
    host: "{{ item }}"
    name: keystone
    password: "{{ KEYSTONE_DBPASS }}"
    priv: 'keystone.*:ALL,GRANT'
    append_privs: true
    state: present
  loop:
    - '%'
    - 127.0.0.1
    - localhost
    - ::1

- name: Install keystone related packages
  yum: 
    name: "{{ item }}"
    state: present
  loop:
     - 'openstack-keystone'
     - 'httpd'
     - 'mod_wsgi'

- name: Edit the /etc/keystone/keystone.conf file
  template:
    src: 'keystone.conf.j2'
    dest: '/etc/keystone/keystone.conf'

- name: Populate the Identity service database
  command: 'su -s /bin/sh -c "keystone-manage db_sync" keystone'

- name: Initialize Fernet key repositories
  command: "{{ item }}"
  loop:
     - 'keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone'
     - 'keystone-manage credential_setup --keystone-user keystone --keystone-group keystone'

- name: Bootstrap the Identity service
  command: 'keystone-manage bootstrap --bootstrap-password "{{ ADMIN_PASS }}" \
  --bootstrap-admin-url http://controller:5000/v3/ \
  --bootstrap-internal-url http://controller:5000/v3/ \
  --bootstrap-public-url http://controller:5000/v3/ \
  --bootstrap-region-id RegionOne'
  
- name: Edit the /etc/httpd/conf/httpd.conf file and configure the ServerName option to reference the controller node
  copy:
     src: httpd.conf
     dest: /etc/httpd/conf/httpd.conf

- name: Create a link to the /usr/share/keystone/wsgi-keystone.conf file
  file:
   dest: "/etc/httpd/conf.d/wsgi-keystone.conf"
   src: "/usr/share/keystone/wsgi-keystone.conf"
   state: link


- name: Start the Apache HTTP service and configure it to start when the system boots
  service:
    name: httpd
    state: started
    enabled: yes

- name: Create OpenStack client environment scripts for admin
  template:
    src: admin-openrc.j2
    dest: /root/admin-openrc

- name: Create OpenStack client environment scripts for demo
  template:
    src: demo-openrc.j2
    dest: /root/demo-openrc

- name: copy openstacksdk to remote host
  copy: 
    src: python2-openstacksdk-0.17.2-1.el7.noarch.rpm
    dest: /tmp/

- name: update openstacksdk
  yum:
    name: /tmp/python2-openstacksdk-0.17.2-1.el7.noarch.rpm
    state: present

- command: 'openstack domain create --description "An Example Domain" example'
  environment:
    OS_USERNAME: admin
    OS_PASSWORD: ADMIN_PASS
    OS_PROJECT_NAME: admin
    OS_USER_DOMAIN_NAME: Default
    OS_PROJECT_DOMAIN_NAME: Default
    OS_AUTH_URL: http://controller:5000/v3
    OS_IDENTITY_API_VERSION: 3
  ignore_errors: yes

- command: 'openstack project create --domain default --description "Service Project" service'
  environment:
    OS_USERNAME: admin
    OS_PASSWORD: ADMIN_PASS
    OS_PROJECT_NAME: admin
    OS_USER_DOMAIN_NAME: Default
    OS_PROJECT_DOMAIN_NAME: Default
    OS_AUTH_URL: http://controller:5000/v3
    OS_IDENTITY_API_VERSION: 3
  ignore_errors: yes

- command: 'openstack project create --domain default --description "Demo Project" demo'
  environment:
    OS_USERNAME: admin
    OS_PASSWORD: ADMIN_PASS
    OS_PROJECT_NAME: admin
    OS_USER_DOMAIN_NAME: Default
    OS_PROJECT_DOMAIN_NAME: Default
    OS_AUTH_URL: http://controller:5000/v3
    OS_IDENTITY_API_VERSION: 3
  ignore_errors: yes





